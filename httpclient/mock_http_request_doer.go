// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zckevin/go-libs/httpclient (interfaces: HTTPRequestDoer)

// Package httpclient is a generated GoMock package.
package httpclient

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHTTPRequestDoer is a mock of HTTPRequestDoer interface.
type MockHTTPRequestDoer struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPRequestDoerMockRecorder
}

// MockHTTPRequestDoerMockRecorder is the mock recorder for MockHTTPRequestDoer.
type MockHTTPRequestDoerMockRecorder struct {
	mock *MockHTTPRequestDoer
}

// NewMockHTTPRequestDoer creates a new mock instance.
func NewMockHTTPRequestDoer(ctrl *gomock.Controller) *MockHTTPRequestDoer {
	mock := &MockHTTPRequestDoer{ctrl: ctrl}
	mock.recorder = &MockHTTPRequestDoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPRequestDoer) EXPECT() *MockHTTPRequestDoerMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockHTTPRequestDoer) Do(arg0 *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockHTTPRequestDoerMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockHTTPRequestDoer)(nil).Do), arg0)
}
